generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BankSampah {
  id         String             @id @default(cuid())
  nama       String
  alamat     String
  telepon    String
  email      String             @unique
  password   String
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  inventaris InventarisSampah[]
  nasabah    Nasabah[]
  transaksi  Transaksi[]

  @@map("bank_sampah")
}

// ðŸ†• NEW: Model untuk Individu (Person)
// Ini adalah identitas unik global untuk setiap orang
model Person {
  id        String   @id @default(cuid())
  nama      String
  nik       String   @default("") // NIK
  alamat    String
  telepon   String
  email     String   @unique // Email unik secara global
  password  String // Password untuk login individu
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relasi ke hubungan Nasabah (satu Person bisa punya banyak hubungan Nasabah)
  nasabahHubungan Nasabah[]

  @@map("person")
}

// ðŸ”„ MODIFIED: Model untuk Nasabah (sekarang menjadi tabel hubungan)
// Ini merepresentasikan hubungan antara seorang Person dengan sebuah BankSampah

model Nasabah {
  id        String   @id @default(cuid())
  saldo     Float    @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relasi ke Person (individu)
  personId String
  person   Person @relation(fields: [personId], references: [id])

  // Relasi ke Bank Sampah
  bankSampahId String
  bankSampah   BankSampah @relation(fields: [bankSampahId], references: [id])

  // Relasi ke Transaksi (transaksi terkait dengan hubungan Nasabah ini)
  transaksi Transaksi[]

  // Memastikan satu Person hanya bisa terdaftar sekali di satu Bank Sampah
  @@unique([personId, bankSampahId])
  @@map("nasabah")
}

model InventarisSampah {
  id              String            @id @default(cuid())
  jenisSampah     String
  hargaPerKg      Float
  stokKg          Float             @default(0)
  isActive        Boolean           @default(true)
  bankSampahId    String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  detailTransaksi DetailTransaksi[]
  bankSampah      BankSampah        @relation(fields: [bankSampahId], references: [id])

  @@unique([bankSampahId, jenisSampah])
  @@map("inventaris_sampah")
}

model Transaksi {
  id              String            @id @default(cuid())
  jenis           JenisTransaksi
  totalNilai      Float
  keterangan      String?
  nasabahId       String?
  bankSampahId    String
  createdAt       DateTime          @default(now())
  detailTransaksi DetailTransaksi[]
  bankSampah      BankSampah        @relation(fields: [bankSampahId], references: [id])
  nasabah         Nasabah?          @relation(fields: [nasabahId], references: [id])

  @@map("transaksi")
}

model DetailTransaksi {
  id                 String           @id @default(cuid())
  transaksiId        String
  inventarisSampahId String
  beratKg            Float
  hargaPerKg         Float
  subtotal           Float
  createdAt          DateTime         @default(now())
  inventarisSampah   InventarisSampah @relation(fields: [inventarisSampahId], references: [id])
  transaksi          Transaksi        @relation(fields: [transaksiId], references: [id])

  @@map("detail_transaksi")
}

enum JenisTransaksi {
  PEMASUKAN
  PENGELUARAN
  PENJUALAN_SAMPAH
}
